#
# Copyright SecureKey Technologies Inc. All Rights Reserved.
#
# SPDX-License-Identifier: Apache-2.0
#

name: "wallet ci"

env:
  GO_VERSION: 1.16

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  Checks:
    runs-on: ubuntu-20.04
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v2
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: Run checks
        run: |
          echo $PATH
          go env
          echo ${{ github.workspace }}
          echo '//npm.pkg.github.com/:_authToken=${DOCKER_PASSWORD}' > ~/.npmrc
          echo '@hyperledger:registry=https://npm.pkg.github.com' >> ~/.npmrc
          echo '@trustbloc-cicd:registry=https://npm.pkg.github.com' >> ~/.npmrc
          echo '@trustbloc:registry=https://npm.pkg.github.com' >> ~/.npmrc
          make checks
        env:
          DOCKER_PASSWORD: ${{ secrets.CR_PAT }}

  UnitTest:
    runs-on: ubuntu-20.04
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v2
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: Run unit test
        run: make unit-test
      - name: Upload coverage to Codecov
        run: |
          bash <(curl https://codecov.io/bash)
        env:
          CODECOV_UPLOAD_TOKEN: ${{ secrets.CODECOV_UPLOAD_TOKEN }}

  BDDTestWalletWeb:
    runs-on: ubuntu-20.04
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v2
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: Run BDD test JS
        run: |
          echo '127.0.0.1 testnet.orb.local' | sudo tee -a /etc/hosts
          echo '127.0.0.1 bdd-hub-auth-hydra.trustbloc.local' | sudo tee -a /etc/hosts
          echo '127.0.0.1 bdd-hydra.trustbloc.local' | sudo tee -a /etc/hosts
          echo '127.0.0.1 bddtest-wallet-web.trustbloc.local' | sudo tee -a /etc/hosts
          echo '127.0.0.1 bdd-edv-oathkeeper-proxy' | sudo tee -a /etc/hosts
          echo '//npm.pkg.github.com/:_authToken=${DOCKER_PASSWORD}' > ~/.npmrc
          echo '@hyperledger:registry=https://npm.pkg.github.com' >> ~/.npmrc
          echo '@trustbloc-cicd:registry=https://npm.pkg.github.com' >> ~/.npmrc
          echo '@trustbloc:registry=https://npm.pkg.github.com' >> ~/.npmrc
          make bdd-test-wallet-web

  BDDTestWalletServer:
    runs-on: ubuntu-20.04
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v2
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: Run BDD test
        run: |
          echo '127.0.0.1 testnet.orb.local' | sudo tee -a /etc/hosts
          echo '127.0.0.1 hydra.trustbloc.local' | sudo tee -a /etc/hosts
          echo '127.0.0.1 stakeholder.one' | sudo tee -a /etc/hosts
          echo '127.0.0.1 sidetree-mock' | sudo tee -a /etc/hosts
          echo '127.0.0.1 bdd-hub-auth-hydra.trustbloc.local' | sudo tee -a /etc/hosts
          echo '127.0.0.1 bdd-hydra.trustbloc.local' | sudo tee -a /etc/hosts
          echo '127.0.0.1 bddtest-wallet-web.trustbloc.local' | sudo tee -a /etc/hosts
          echo '127.0.0.1 bdd-edv-oathkeeper-proxy' | sudo tee -a /etc/hosts
          echo '//npm.pkg.github.com/:_authToken=${DOCKER_PASSWORD}' > ~/.npmrc
          echo '@hyperledger:registry=https://npm.pkg.github.com' >> ~/.npmrc
          echo '@trustbloc-cicd:registry=https://npm.pkg.github.com' >> ~/.npmrc
          echo '@trustbloc:registry=https://npm.pkg.github.com' >> ~/.npmrc
          make bdd-test-wallet-server
        env:
          DOCKER_PASSWORD: ${{ secrets.CR_PAT }}

  Publish:
    needs: [Checks, UnitTest, BDDTestWalletWeb, BDDTestWalletServer]
    if: github.event_name == 'push' && (github.repository == 'trustbloc/edge-agent' && github.ref == 'refs/heads/main')
    runs-on: ubuntu-20.04
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v2
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ env.GO_VERSION }}

      - run: |
          function logout {
            docker logout
          }
          trap logout EXIT
          git lfs install
          git lfs pull
          source ci/version_var.sh
          echo $DOCKER_PASSWORD | docker login ghcr.io --username $DOCKER_USER --password-stdin
          make wallet-web-docker
          docker tag ghcr.io/trustbloc/wallet-web:latest ${WALLET_WEB_PKG}:${WALLET_WEB_TAG}
          docker push ${WALLET_WEB_PKG}:${WALLET_WEB_TAG}
          make wallet-server-docker
          docker tag ghcr.io/trustbloc/wallet-server:latest ${WALLET_SERVER_PKG}:${WALLET_SERVER_TAG}
          docker push ${WALLET_SERVER_PKG}:${WALLET_SERVER_TAG}
        env:
          DOCKER_USER: ${{ secrets.CR_USER }}
          DOCKER_PASSWORD: ${{ secrets.CR_PAT }}

