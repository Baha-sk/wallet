# Copyright SecureKey Technologies Inc. All Rights Reserved.
#
# SPDX-License-Identifier: Apache-2.0


name: $(SourceBranchName)-$(Date:yyyyMMdd).$(Rev:r)
trigger:
  - master
pr:
  - master
variables:
  GO_VERSION: 1.15
  GOPATH: $(Agent.BuildDirectory)/go

jobs:
  - job: Checks
    pool:
      vmImage: ubuntu-18.04
    timeoutInMinutes: 30
    steps:
      - template: azp-dependencies.yml
      - checkout: self
      - bash: |
          echo '//npm.pkg.github.com/:_authToken=${DOCKER_PASSWORD}' > ~/.npmrc
          echo '@hyperledger:registry=https://npm.pkg.github.com' >> ~/.npmrc
          echo '@trustbloc-cicd:registry=https://npm.pkg.github.com' >> ~/.npmrc
          make checks
        env:
          DOCKER_PASSWORD: $(DOCKER_PASSWORD)
        displayName: Run checks

  - job: UnitTest
    pool:
      vmImage: ubuntu-18.04
    timeoutInMinutes: 30
    steps:
      - template: azp-dependencies.yml
      - checkout: self
      - script: make unit-test
        displayName: Run unit test
      - script: bash <(curl https://codecov.io/bash) -t $CODECOV_UPLOAD_TOKEN
        env:
          CODECOV_UPLOAD_TOKEN: $(CODECOV_UPLOAD_TOKEN)
        displayName: Upload coverage to Codecov

  - job: BDDTestJS
    pool:
      vmImage: ubuntu-18.04
    timeoutInMinutes: 30
    steps:
      - template: azp-dependencies.yml
      - checkout: self
      - bash: |
          function logout {
            docker logout
          }
          trap logout EXIT
          echo $DOCKER_PASSWORD | docker login docker.pkg.github.com --username $DOCKER_USER --password-stdin
          echo '127.0.0.1 testnet.trustbloc.local' | sudo tee -a /etc/hosts
          echo '127.0.0.1 stakeholder.one' | sudo tee -a /etc/hosts
          echo '127.0.0.1 sidetree-mock' | sudo tee -a /etc/hosts
          echo '127.0.0.1 bdd-hub-auth-hydra.trustbloc.local' | sudo tee -a /etc/hosts
          echo '127.0.0.1 bdd-hydra.trustbloc.local' | sudo tee -a /etc/hosts
          echo '127.0.0.1 bddtest-wallet-web.trustbloc.local' | sudo tee -a /etc/hosts
          echo '127.0.0.1 bdd-edv-oathkeeper-proxy' | sudo tee -a /etc/hosts
          echo '//npm.pkg.github.com/:_authToken=${DOCKER_PASSWORD}' > ~/.npmrc
          echo '@hyperledger:registry=https://npm.pkg.github.com' >> ~/.npmrc
          echo '@trustbloc-cicd:registry=https://npm.pkg.github.com' >> ~/.npmrc
          make bdd-test-wallet-web
        env:
          DOCKER_USER: $(DOCKER_USER)
          DOCKER_PASSWORD: $(DOCKER_PASSWORD)
        displayName: Run BDD tests in JS

  - job: BDDTestHTTPServer
    pool:
      vmImage: ubuntu-18.04
    timeoutInMinutes: 30
    steps:
      - template: azp-dependencies.yml
      - checkout: self
      - bash: |
          function logout {
            docker logout
          }
          trap logout EXIT
          echo $DOCKER_PASSWORD | docker login docker.pkg.github.com --username $DOCKER_USER --password-stdin
          echo '127.0.0.1 testnet.trustbloc.local' | sudo tee -a /etc/hosts
          echo '127.0.0.1 hydra.trustbloc.local' | sudo tee -a /etc/hosts
          echo '127.0.0.1 stakeholder.one' | sudo tee -a /etc/hosts
          echo '127.0.0.1 sidetree-mock' | sudo tee -a /etc/hosts
          echo '127.0.0.1 bdd-hub-auth-hydra.trustbloc.local' | sudo tee -a /etc/hosts
          echo '127.0.0.1 bdd-hydra.trustbloc.local' | sudo tee -a /etc/hosts
          echo '127.0.0.1 bddtest-wallet-web.trustbloc.local' | sudo tee -a /etc/hosts
          echo '127.0.0.1 bdd-edv-oathkeeper-proxy' | sudo tee -a /etc/hosts
          echo '//npm.pkg.github.com/:_authToken=${DOCKER_PASSWORD}' > ~/.npmrc
          echo '@hyperledger:registry=https://npm.pkg.github.com' >> ~/.npmrc
          echo '@trustbloc-cicd:registry=https://npm.pkg.github.com' >> ~/.npmrc
          make bdd-test-wallet-server
        env:
          DOCKER_USER: $(DOCKER_USER)
          DOCKER_PASSWORD: $(DOCKER_PASSWORD)
        displayName: Run HTTP Server (wallet-server)

  - job: Publish
    dependsOn:
      - Checks
      - UnitTest
      - BDDTestJS
      - BDDTestHTTPServer
    condition: and(succeeded(), ne(variables['Build.Reason'], 'PullRequest'))
    pool:
      vmImage: ubuntu-18.04
    timeoutInMinutes: 30
    steps:
      - template: azp-dependencies.yml
      - checkout: self
      - bash: |
          function logout {
            docker logout
          }
          trap logout EXIT
          git lfs install
          git lfs pull
          source ci/version_var.sh
          echo $DOCKER_PASSWORD | docker login docker.pkg.github.com --username $DOCKER_USER --password-stdin
          echo '//npm.pkg.github.com/:_authToken=${DOCKER_PASSWORD}' > ~/.npmrc
          echo '@hyperledger:registry=https://npm.pkg.github.com' >> ~/.npmrc
          echo '@trustbloc-cicd:registry=https://npm.pkg.github.com' >> ~/.npmrc
          make wallet-web-docker
          docker tag docker.pkg.github.com/trustbloc/edge-agent/wallet-web:latest ${WALLET_WEB_PKG}:${WALLET_WEB_TAG}
          docker push ${WALLET_WEB_PKG}:${WALLET_WEB_TAG}
          make wallet-server-docker
          docker tag docker.pkg.github.com/trustbloc/edge-agent/wallet-server:latest ${WALLET_SERVER_PKG}:${WALLET_SERVER_TAG}
          docker push ${WALLET_SERVER_PKG}:${WALLET_SERVER_TAG}
        env:
          DOCKER_USER: $(DOCKER_USER)
          DOCKER_PASSWORD: $(DOCKER_PASSWORD)
