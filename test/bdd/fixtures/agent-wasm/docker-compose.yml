
#
# Copyright SecureKey Technologies Inc. All Rights Reserved.
#
# SPDX-License-Identifier: Apache-2.0
#
version: '2'

services:

  user.agent.example.com:
    container_name: user.agent.example.com
    image: ${USER_WASM_IMAGE}:latest
    environment:
      - HTTP_SERVER_HOST_URL=0.0.0.0:8091
      - TLS_CERT_FILE=/etc/tls/ec-pubCert.pem
      - TLS_KEY_FILE=/etc/tls/ec-key.pem
      - ARIESD_DEFAULT_LABEL=user-agent
      - BLOC_DOMAIN=testnet.trustbloc.local
    ports:
      - 8091:8091
    volumes:
      - ../keys/tls:/etc/tls
    command: start


  sidetree:
    container_name: sidetree-mock
    hostname: sidetree-mock
    image: ${SIDETREE_MOCK_IMAGE}:${SIDETREE_MOCK_IMAGE_TAG}
    environment:
      - SIDETREE_MOCK_TLS_CERTIFICATE=/etc/sidetree/tls/ec-pubCert.pem
      - SIDETREE_MOCK_TLS_KEY=/etc/sidetree/tls/ec-key.pem
      - SIDETREE_MOCK_HOST=0.0.0.0
      - SIDETREE_MOCK_PORT=48326
      - SIDETREE_MOCK_DID_NAMESPACE=did:trustbloc:testnet.trustbloc.local
    ports:
      - 48326:48326
    volumes:
      - ../keys/tls:/etc/sidetree/tls


  testnet.trustbloc.local:
    container_name: testnet.trustbloc.local
    hostname: testnet.trustbloc.local
    image: halverneus/static-file-server:v1.7.2
    environment:
      - PORT=443
      - FOLDER=/web
      - CORS=true
      - DEBUG=true
      - TLS_CERT=/etc/tls/ec-pubCert.pem
      - TLS_KEY=/etc/tls/ec-key.pem
    ports:
      - "443:443"
    volumes:
      - ./config:/web/.well-known/did-trustbloc
      - ../keys/tls:/etc/tls

  stakeholder.one:
    container_name: stakeholder.one
    hostname: stakeholder.one
    image: halverneus/static-file-server:v1.7.2
    environment:
      - PORT=8088
      - FOLDER=/web
      - CORS=true
      - TLS_CERT=/etc/tls/ec-pubCert.pem
      - TLS_KEY=/etc/tls/ec-key.pem
    ports:
      - "8088:8088"
    volumes:
      - ./config:/web/.well-known/did-trustbloc
      - ../keys/tls:/etc/tls


  dns-proxy-server:
    image: defreitas/dns-proxy-server:latest
    hostname: dns.mageddo
    ports:
      - "5380:5380"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /etc/resolv.conf:/etc/resolv.conf

  uni-resolver-web:
    image: universalresolver/uni-resolver-web:latest
    ports:
      - "9080:8080"
    volumes:
      - ./config.json:/opt/uni-resolver-java/uni-resolver-web/config.json
      - ./run-uni-resolver-web.sh:/opt/uni-resolver-java/uni-resolver-web/docker/run-uni-resolver-web.sh


  trustbloc.did.method.example.com:
    container_name: trustbloc.did.method.example.com
    image: ${BLOC_DID_METHOD_IMAGE}:${BLOC_DID_METHOD_IMAGE_TAG}
    environment:
      - DID_METHOD_HOST_URL=0.0.0.0:8060
      - DID_METHOD_TLS_CACERTS=/etc/tls/ec-cacert.pem
      - DID_METHOD_DOMAIN=testnet.trustbloc.local
      - DID_METHOD_DATABASE_TYPE=mem
      - DID_METHOD_DATABASE_PREFIX=driver
    ports:
      - 8060:8060
    entrypoint: ""
    command:  /bin/sh -c "sleep 10;did-method start"
    volumes:
      - ../keys/tls:/etc/tls

